@page "/"

@using CromulentBisgetti.ContainerPacking.Entities
@using PackingService.Blazor.Data
@inject BoxService BoxService
@inject IJSRuntime JSRuntime; 



    <div class="card" style="width: 50%">
        <div class="card-body">
            <h5 class="card-title">Input Items</h5>
            @*<p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>*@
            <input @bind-value="_custOrderNo" @bind-value:event="oninput" />
            <button @onclick="GetItems">Get Items for Order</button>
            <p>Item count: @_items.Count()</p>
        </div>

        <div class="card-body">
            <button @onclick="Pack">Pack Pallets</button>
        </div>

    </div>

<div id="accordion">
    <div class="card">
        <div class="card-header" id="headingOne">
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Items
                </button>
            </h5>
        </div>

        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="card-body">

                <table class="table table-dark">
                    <thead>
                        <tr>
                            <th class="button-column"></th>
                            <th>Name</th>
                            <th>L</th>
                            <th>W</th>
                            <th>H</th>
                            <th>Qty</th>
                            <th>Weight</th>
                            <th>Can be packed flagpole?</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in _items)
                        {

                            <tr>
                                <td></td>
                                <td>@item.Id </td>
                                <td>@item.Dim1</td>
                                <td>@item.Dim2</td>
                                <td>@item.Dim3</td>
                                <td>@item.Quantity</td>
                                <td>@item.WeightDef</td>
                                <td>@if (item.CanBeFlagpole)
                                    {
                                        _flagpoleText = "Yes";
                                    }
                                    else
                                    {
                                        _flagpoleText = "No";
                                    }
                                @_flagpoleText
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Containers
                </button>
            </h5>
        </div>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
            <div class="card-body">

                <table class="table">
                    <thead>
                        <tr>
                            <th class="button-column"></th>
                            <th>Name</th>
                            <th>L</th>
                            <th>W</th>
                            <th>H</th>
                            <th>Volume</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var box in _boxes)
                        {

                        <tr>
                            <td></td>
                            <td>@box.Id</td>
                            <td>@box.Length</td>
                            <td>@box.Width</td>
                            <td>@box.Height</td>
                            <td>@box.Volume</td>
                            <td></td>
                        </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingThree">
            <h5 class="mb-0">
                <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                    Pack Results
                </button>
            </h5>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordion">
            <div class="card-body">
                @if (_packingResults != null)
                {

                    <table class="table table-condensed" style="font-size: 14px;">
                        <thead>
                            <tr>
                                <th class="algorithm-name-column">Algorithm<br />Name</th>
                                <th class="data-column text-center">Pack Time<br />(ms)</th>
                                <th class="data-column text-center">
                                    <div data-toggle="tooltip" title="% of container volume packed with items">% Cont.<br />Used</div>
                                </th>
                                <th class="data-column text-center"># Items<br />Packed</th>
                                <th class="data-column text-center"># Items<br />Unpacked</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pack in _packingResults)
                            {
                                <tr>
                                    <td class="algorithm-name-column">
                                        <table>

                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="form-control-static">@pack.AlgorithmName</p>
                                                    </td>
                                                </tr>
                                            </tbody>

                                        </table>
                                    </td>
                                    <td class="data-column text-center">
                                        <table style="margin: auto;">

                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="form-control-static">@pack.PackTimeInMilliseconds</p>
                                                    </td>
                                                </tr>
                                            </tbody>

                                        </table>
                                    </td>
                                    <td class="data-column text-center">
                                        <table style="margin: auto;">

                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <p class="form-control-static">@pack.PercentContainerVolumePacked</p>
                                                    </td>
                                                </tr>
                                            </tbody>

                                        </table>
                                    </td>
                                    <td class="data-column">
                                        <table style="width: 100%">
                                            
                                            @{
                                                var color = pack.UnpackedItems.Any() ? "" : "bg-success";
                                            }

                                            <tbody>
                                                <tr>
                                                    <td style="@color">
                                                        <p class="form-control-static">@pack.PackedItems.Count()</p>
                                                    </td>
                                                </tr>
                                            </tbody>
                                            
                                        </table>
                                    </td>
                                    <td class="data-column">
                                        <table style="width: 100%">

                                            <tbody>
                                                <tr>
                                                    <td style="@color">
                                                        <p class="form-control-static">@pack.UnpackedItems.Count()</p>
                                                    </td>
                                                </tr>
                                            </tbody>

                                        </table>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingFour">
            <h5 class="mb-0">
                <button class="btn btn-link" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" aria-controls="collapseFour">
                    Packing Visualization
                </button>
            </h5>
        </div>

            <div class="card-body">

                @foreach (var packResult in _packingResults)
                {
                    <label>
                        <input name="yourColor" type="radio"
                               value="@packResult.IndexId"
                               checked="@(_selectedPackingResult == packResult.IndexId)"
                               @onchange="@(() => { _selectedPackingResult = packResult.IndexId;
                                                      Visualize();
                                          })" />
                        @packResult.IndexId.ToString()
                    </label>
                }
            </div>
            <div class="card-body" id="pack">

                <div>
                    <button @onclick="@(e=>ShowNext())">Show Next</button>
                    <button @onclick="ShowPrevious">Show Previous</button>
                </div>
                <div id="drawing-container"></div>
            </div>


    </div>
</div>



@code {
    //private List<int> _algorithms = new List<int>();
    private List<Item> _items = new List<Item>();
    private List<Container> _boxes = new List<Container>();
    private Container _container = new Container("Pallet 72in", 40, 48, 72);
    private List<AlgorithmPackingResult> _packingResults;

    private int _selectedPackingResult = -1;

    private string _custOrderNo;
    private string _containerType;
    private string _flagpoleText;

    private int itemCounter = 0;

    protected override async Task OnInitializedAsync()
    {
        _packingResults = new List<AlgorithmPackingResult>();
        _custOrderNo = "R4888";
        //await GetAlgorithms();
        await GetItems();
        //await GetPallets();
        await GetSmallPackageBoxes();
    }
    //Todo add call to pack what is in the DOM and render it

    private void Pack()
    {
        _packingResults = CromulentBisgetti.ContainerPacking.PackingService.PackContainer(_container, _items);


        JSRuntime.InvokeAsync<string>("InitializeDrawing");

    

        _selectedPackingResult = 0;
        Visualize();

    }

    private void Visualize()
    {
        JSRuntime.InvokeAsync<string>("SetData", System.Text.Json.JsonSerializer.Serialize(_packingResults[_selectedPackingResult].PackedItems));
    }


    private async Task GetSmallPackageBoxes()
    {
        _containerType = "Small Package";
        _boxes = await BoxService.GetSmallPackageBoxesAsync();
    }

    private async Task GetItems()
    {
        _items = await BoxService.GetItemsAsync(_custOrderNo);
    }

    private void ShowNext()
    {
        JSRuntime.InvokeAsync<string>("PackItemInRender");
    }

    private void ShowPrevious()
    {
        JSRuntime.InvokeAsync<string>("UnpackItemInRender");
    }


}